<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>有翅膀的天狼</title>
  
  <subtitle>Whisper to the world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://josephpei.github.io/"/>
  <updated>2018-04-28T03:29:59.083Z</updated>
  <id>http://josephpei.github.io/</id>
  
  <author>
    <name>Joseph Pei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu awesome terminal</title>
    <link href="http://josephpei.github.io/2018/04/28/ubuntu-awesome-terminal/"/>
    <id>http://josephpei.github.io/2018/04/28/ubuntu-awesome-terminal/</id>
    <published>2018-04-28T02:53:07.000Z</published>
    <updated>2018-04-28T03:29:59.083Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gnome-terminal-solarized-theme&quot;&gt;&lt;a href=&quot;#gnome-terminal-solarized-theme&quot; class=&quot;headerlink&quot; title=&quot;gnome-terminal solarized theme&quot;&gt;&lt;/a&gt;gnome-terminal solarized theme&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Anthony25/gnome-terminal-colors-solarized&quot;&gt;Solarized Colorscheme for Gnome Terminal&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/Anthony25/gnome-terminal-colors-solarized.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; gnome-terminal-colors-solarized&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./install.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PyCharm 使用 Windows 10 WSL Ubuntu 子系统中的 Python</title>
    <link href="http://josephpei.github.io/2016/08/18/PyCharm-%E4%BD%BF%E7%94%A8-Windows-10-WSL-Ubuntu-%E5%AD%90%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84-Python/"/>
    <id>http://josephpei.github.io/2016/08/18/PyCharm-使用-Windows-10-WSL-Ubuntu-子系统中的-Python/</id>
    <published>2016-08-18T01:30:18.000Z</published>
    <updated>2016-08-19T02:32:14.646Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先升级 Windows 10 Anniversary 周年纪念版，又称 RedStone1。如果没有收到推送，可以到这个网址 &lt;a href=&quot;https://support.microsoft.com/en-us/help/12387/windows-10-update-history&quot;&gt;https://support.microsoft.com/en-us/help/12387/windows-10-update-history&lt;/a&gt; 手动升级。&lt;/p&gt;
&lt;h2 id=&quot;Step-0-安装-WSL-Ubuntu&quot;&gt;&lt;a href=&quot;#Step-0-安装-WSL-Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Step 0: 安装 WSL Ubuntu&quot;&gt;&lt;/a&gt;Step 0: 安装 WSL Ubuntu&lt;/h2&gt;&lt;p&gt;在设置中开启开发人员模式，添加 Windows Subsystem for Linux (Beta)，嗯，目前还是 Beta。&lt;/p&gt;
&lt;p&gt;Win + X 打开 CMD 管理员，输入 &lt;code&gt;bash&lt;/code&gt; 或者 &lt;code&gt;lxrun /install&lt;/code&gt;,会有提示是否安装 Ubuntu，完成之后会提示输入用户名和密码。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django之路: Python Decouple</title>
    <link href="http://josephpei.github.io/2016/08/05/Django%E4%B9%8B%E8%B7%AF-Python-Decouple/"/>
    <id>http://josephpei.github.io/2016/08/05/Django之路-Python-Decouple/</id>
    <published>2016-08-05T10:05:03.000Z</published>
    <updated>2017-11-20T02:00:41.341Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django settings 中存有很多私密信息，如 database url, password, secret key, allowed hosts 等，我们还可能有 Debug / Deploy 两套不同的运行环境，&lt;a href=&quot;https://pypi.python.org/pypi/python-decouple&quot;&gt;python-decouple&lt;/a&gt; 可以让这些环境变量与代码分离。
    
    </summary>
    
    
      <category term="python" scheme="http://josephpei.github.io/tags/python/"/>
    
      <category term="django" scheme="http://josephpei.github.io/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>Linux驱动开发之一 Hello World</title>
    <link href="http://josephpei.github.io/2015/07/19/Linux%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%80-Hello-World/"/>
    <id>http://josephpei.github.io/2015/07/19/Linux驱动开发之一-Hello-World/</id>
    <published>2015-07-19T02:21:47.000Z</published>
    <updated>2015-07-19T02:30:08.685Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;完整的 Hello World 内核模块 hello.c&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div
        
      
    
    </summary>
    
    
      <category term="LinuxDriver" scheme="http://josephpei.github.io/tags/LinuxDriver/"/>
    
  </entry>
  
  <entry>
    <title>Linux/Ubuntu 下为 Android 创建无线分享热点</title>
    <link href="http://josephpei.github.io/2015/06/24/Linux-Ubuntu-%E4%B8%8B%E4%B8%BA-Android-%E5%88%9B%E5%BB%BA%E6%97%A0%E7%BA%BF%E5%88%86%E4%BA%AB%E7%83%AD%E7%82%B9/"/>
    <id>http://josephpei.github.io/2015/06/24/Linux-Ubuntu-下为-Android-创建无线分享热点/</id>
    <published>2015-06-24T03:34:40.000Z</published>
    <updated>2015-06-24T03:47:37.743Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;create ap hotspot for ubuntu linux&lt;/p&gt;
&lt;p&gt;准备&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://w1.fi/hostapd/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
    
      <category term="android" scheme="http://josephpei.github.io/tags/android/"/>
    
      <category term="ubuntu" scheme="http://josephpei.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记10 AJAX 图片上传</title>
    <link href="http://josephpei.github.io/2014/09/04/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010-AJAX-%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    <id>http://josephpei.github.io/2014/09/04/Spring-MVC-学习笔记10-AJAX-图片上传/</id>
    <published>2014-09-04T12:21:09.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring MVC AJAX 方式图片上传，采用 base64 编码图片。&lt;/p&gt;
&lt;p&gt;pom.xml&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jackson-databind&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.4.2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;commons-codec&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;commons-codec&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.9&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记9 JQuery 验证</title>
    <link href="http://josephpei.github.io/2014/09/01/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09-JQuery-%E9%AA%8C%E8%AF%81/"/>
    <id>http://josephpei.github.io/2014/09/01/Spring-MVC-学习笔记9-JQuery-验证/</id>
    <published>2014-09-01T13:05:28.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前面我们已经学习过了在服务器端进行验证，这次学习 JQuery Validator 客户端验证。客户端验证虽然可以被用户绕过，但是可以作为辅助手段，对于一般用户可以减少一定的服务器通讯。&lt;/p&gt;
&lt;p&gt;以注册页面为例，实现一般化的验证，并且加上二次输入密码、用户名字段唯一性验证。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记8 Spring Security</title>
    <link href="http://josephpei.github.io/2014/08/31/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08-Spring-Security/"/>
    <id>http://josephpei.github.io/2014/08/31/Spring-MVC-学习笔记8-Spring-Security/</id>
    <published>2014-08-31T01:23:35.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring Security 是为基于 Spring 的应用程序提供声明式安全保护的安全性框架，基于 Spring AOP 和 Servlet 过滤器实现，能够在 Web 请求级别和方法调用级别处理身份验证和授权。它使用 Servlet 过滤器保护 Web 请求和限制 URL 级别的访问，也可以使用 Spring AOP 保护方法调用——借助于对象代理和使用通知，能够确保只有具备适当权限的用户才能访问安全保护的方法。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记7 表现层 Tiles Sitemesh</title>
    <link href="http://josephpei.github.io/2014/08/30/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07-%E8%A1%A8%E7%8E%B0%E5%B1%82-Tiles-Sitemesh/"/>
    <id>http://josephpei.github.io/2014/08/30/Spring-MVC-学习笔记7-表现层-Tiles-Sitemesh/</id>
    <published>2014-08-30T15:31:13.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;表现层为了减少手工写 jsp 页面代码的工作量，出现了许多不同的技术方案，Tiles, SiteMesh, Velocity, FreeMarker 等。这里选用 Tiles3/Sitemesh 负责自定义的 header, body, footer 组装，jsp 页面加入 bootstrap, jQuery ，暂时不用 Velocity/FreeMarker 模板。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记6 SLF4J Logback 日志</title>
    <link href="http://josephpei.github.io/2014/08/25/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06-SLF4J-Logback-%E6%97%A5%E5%BF%97/"/>
    <id>http://josephpei.github.io/2014/08/25/Spring-MVC-学习笔记6-SLF4J-Logback-日志/</id>
    <published>2014-08-25T08:53:10.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Simple Logging Facade for Java(SL4J)&lt;/p&gt;
&lt;p&gt;SLF4J 提供了一组抽象接口，在部署应用时后端可以选择不同的日志框架，而无需更改已有代码。&lt;/p&gt;
&lt;p&gt;Logback 是项目 Log4j 的后继。它由三个模块组成：logback-core, logback-classic, logback-access。其中 logback-core 是基础模块。logback-classic 是 log4j 的改良版，是 slf4j api 的原生实现，可以方便地更换成其它日志框架。logback-access 模块与 Servlet 容器集成提供Http-access 日志的功能。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记5 REST与AJAX</title>
    <link href="http://josephpei.github.io/2014/08/24/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05-REST%E4%B8%8EAJAX/"/>
    <id>http://josephpei.github.io/2014/08/24/Spring-MVC-学习笔记5-REST与AJAX/</id>
    <published>2014-08-24T03:14:55.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;近来，以信息为中心的表述性状态转移(Representational State Transfer, REST)已成为替换传统 SOAP Web 服务的流行方案，Spring MVC 封装了对 REST 的良好支持。&lt;/p&gt;
&lt;p&gt;当谈论REST时，有一种常见的错误就是将其视为“基于 URL 的 Web 服务”，将 REST 作为另一种类型的远程过程调用(RPC)机制。恰好相反，REST 与 RPC 几乎没有任何关系，RPC 是面向服务的，并关注于行为和动作，而 REST 是面向资源的，强调描述应用程序的事物和名词。REST 就是将资源的状态以最合适的形式从服务器端转移到客户端（或者反之）。&lt;/p&gt;
&lt;p&gt;本节应用 @ResponseBody 注解实现简单的 RESTless URL，并与 JQuery AJAX 结合。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记4 数据库之整合Hibernate</title>
    <link href="http://josephpei.github.io/2014/08/20/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E6%95%B4%E5%90%88Hibernate/"/>
    <id>http://josephpei.github.io/2014/08/20/Spring-MVC-学习笔记4-数据库之整合Hibernate/</id>
    <published>2014-08-20T08:25:10.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;整合 Spring MVC 与 Hibernate&lt;/p&gt;
&lt;p&gt;pom.xml&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.hibernate&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;hibernate-core&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;hibernate.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记3 验证Validator</title>
    <link href="http://josephpei.github.io/2014/08/18/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03-%E9%AA%8C%E8%AF%81Validator/"/>
    <id>http://josephpei.github.io/2014/08/18/Spring-MVC-学习笔记3-验证Validator/</id>
    <published>2014-08-18T09:06:38.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring Framework 验证有两种方式，一是 Spring 传统的，对需要验证的 POJO 对象编写一个对应的验证类（实现Validator接口）；二是标准的 JSR-303/349 Bean Validation API，需要第三方的实现（Hibernate-validator）；三是使用 JSR-349 中的 ScriptAssert。&lt;/p&gt;
&lt;p&gt;下面以注册页面验证为例，用 JSR Bean Validation 实现基本字段验证，应用不同手段实现密码校验。&lt;br&gt;
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记2 数据库之JDBC</title>
    <link href="http://josephpei.github.io/2014/08/17/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8BJDBC/"/>
    <id>http://josephpei.github.io/2014/08/17/Spring-MVC-学习笔记2-数据库之JDBC/</id>
    <published>2014-08-17T02:36:34.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这一节为我们的登录模块添加数据库存储，使用Spring JdbcTemplate。
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 学习笔记1 入门</title>
    <link href="http://josephpei.github.io/2014/08/16/Spring-MVC-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E5%85%A5%E9%97%A8/"/>
    <id>http://josephpei.github.io/2014/08/16/Spring-MVC-学习笔记1-入门/</id>
    <published>2014-08-16T13:30:27.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，前端控制器是DispatcherServlet；应用控制器其实拆为处理器映射器(Handler Mapping)进行处理器管理和视图解析器(View Resolver)进行视图管理；页面控制器/动作/处理器为Controller接口（仅包含ModelAndView handleRequest(request, response) 方法）的实现（也可以是任何的POJO类）；支持本地化（Locale）解析、主题（Theme）解析及文件上传等；提供了非常灵活的数据验证、格式化和数据绑定机制；提供了强大的约定大于配置（惯例优先原则）的契约式编程支持。&lt;/p&gt;
&lt;p&gt;这里我们实现一个简单的登录模块，登录后地址转为 &lt;a href=&quot;http://domain.com/USER_NAME&quot;&gt;http://domain.com/USER_NAME&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://josephpei.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>动态规划 DP 应用之 01 背包</title>
    <link href="http://josephpei.github.io/2014/08/06/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-DP-%E5%BA%94%E7%94%A8%E4%B9%8B-01-%E8%83%8C%E5%8C%85/"/>
    <id>http://josephpei.github.io/2014/08/06/动态规划-DP-应用之-01-背包/</id>
    <published>2014-08-06T02:21:29.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;问题描述：n 个不同的物品，每个物品只有一个，有价值 value 和重量 weight 两个属性；背包容量 w。求背包所能容纳的最大价值。&lt;/p&gt;
&lt;p&gt;最优子结构：当我们把一件物品放进背包里时，会让总价值变高，并且让背包变重。对某一件物品来说，我们可以选择放或不放，然后移去这件物品所带来的影响。&lt;/p&gt;
&lt;p&gt;c(n, w) = max( c(n-1, w), c(n-1, w-W[n]) + C[n] )&lt;br&gt;               ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^&lt;br&gt;               不放 -&amp;gt; 0         放 -&amp;gt; 1&lt;/p&gt;
&lt;p&gt;n：第1个到第n个物品要放进背包内。&lt;br&gt;w：背包负重上限。&lt;br&gt;c(n, w)：第1个到第n个物品尽量塞进负重限制为w的背包时，最大价值。&lt;br&gt;W[n]：第n个物品的重量。&lt;br&gt;C[n]：第n个物品的价值。
    
    </summary>
    
    
      <category term="algorithm" scheme="http://josephpei.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>动态规划 DP 应用 HamiltonPath 及 TSP</title>
    <link href="http://josephpei.github.io/2014/08/05/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-DP-%E5%BA%94%E7%94%A8-HamiltonPath-%E5%8F%8A-TSP/"/>
    <id>http://josephpei.github.io/2014/08/05/动态规划-DP-应用-HamiltonPath-及-TSP/</id>
    <published>2014-08-05T03:17:41.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Hamilton Path 及 TSP 都属于 NP 完全问题，目前理论上尚无多项式算法，穷举法的时间复杂度是 O(N!)，通过运用动态规划 DP，可以缩短至 O(2^N * N^2)。 &lt;/p&gt;
&lt;p&gt;输入：无向图 G = (V, E)，点集 V = {0, 1, … , n-1}，起始点 0&lt;/p&gt;
&lt;p&gt;最优子结构：考虑路径上的最后一条边&lt;/p&gt;
&lt;p&gt;dp[s,j] = min ( dp[s-{j},i] + adj[i,j] )&lt;/p&gt;
&lt;p&gt;dp[s+{j},j] = min ( dp[s,i] + adj[i,j] )
    
    </summary>
    
    
      <category term="algorithm" scheme="http://josephpei.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>UW 软硬件接口lab3 bufbomb</title>
    <link href="http://josephpei.github.io/2014/08/02/UW-%E8%BD%AF%E7%A1%AC%E4%BB%B6%E6%8E%A5%E5%8F%A3lab3-bufbomb/"/>
    <id>http://josephpei.github.io/2014/08/02/UW-软硬件接口lab3-bufbomb/</id>
    <published>2014-08-02T14:31:49.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本实验即常见的缓冲区溢出攻击。（注：新的 64bit Win8/Linux 下这种简单方式无效，x86_64 cpu 的可执行标志位 exec-shield，gcc 栈保护选项开关 -fno-stack-protector）&lt;/p&gt;
&lt;p&gt;主函数为 test()，首先声明一个局部变量 volatile int local = 0xdeadbeef，volatile 是编译时不使用 register 优化，必须分配栈空间，后面的实验过程不能覆盖这个 local 变量。&lt;/p&gt;
&lt;p&gt;然后就是存在缓冲区溢出漏洞的 getbuf 函数，也就是我们要操作的对象。
    
    </summary>
    
    
      <category term="mooc" scheme="http://josephpei.github.io/tags/mooc/"/>
    
  </entry>
  
  <entry>
    <title>UW 软硬件接口lab2 bomb</title>
    <link href="http://josephpei.github.io/2014/08/02/UW-%E8%BD%AF%E7%A1%AC%E4%BB%B6%E6%8E%A5%E5%8F%A3lab2-bomb/"/>
    <id>http://josephpei.github.io/2014/08/02/UW-软硬件接口lab2-bomb/</id>
    <published>2014-08-02T14:28:40.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本实验是解除二进制炸弹。给你一个二进制可执行文件，运行该文件，你需要在没有任何提示的情况下输入6个password，如果都输入正确，则炸弹被解除（完成了实验）；如果输入错误，则炸弹爆炸（当然不是真爆炸了，需要重做）。
    
    </summary>
    
    
      <category term="mooc" scheme="http://josephpei.github.io/tags/mooc/"/>
    
  </entry>
  
  <entry>
    <title>leetcode - two-sum</title>
    <link href="http://josephpei.github.io/2014/05/04/leetcode---two-sum/"/>
    <id>http://josephpei.github.io/2014/05/04/leetcode---two-sum/</id>
    <published>2014-05-04T01:46:02.000Z</published>
    <updated>2015-02-06T03:41:19.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;原题：&lt;/p&gt;
&lt;p&gt;Given an array of integers, find two numbers such that they add up to a specific target number.&lt;/p&gt;
&lt;p&gt;The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have exactly one solution.&lt;/p&gt;
&lt;p&gt;Input: numbers={2, 7, 11, 15}, target=9&lt;/p&gt;
&lt;p&gt;Output: index1=1, index2=2&lt;br&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="http://josephpei.github.io/tags/leetcode/"/>
    
      <category term="algorithm" scheme="http://josephpei.github.io/tags/algorithm/"/>
    
  </entry>
  
</feed>
